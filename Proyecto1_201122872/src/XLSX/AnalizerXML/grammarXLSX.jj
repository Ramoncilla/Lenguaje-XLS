/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. grammarXLSX.jj */
/*@egen*/options{
	
IGNORE_CASE = false;

STATIC=false;
}

PARSER_BEGIN(grammarXLSX)

package XLSX.AnalizerXML;
import java.util.ArrayList;
import java.util.List;

public class grammarXLSX/*@bgen(jjtree)*/implements grammarXLSXTreeConstants/*@egen*/{/*@bgen(jjtree)*/
  protected JJTgrammarXLSXState jjtree = new JJTgrammarXLSXState();

/*@egen*/

}

PARSER_END(grammarXLSX)


SKIP:
{
 " "
    |"\r"
    |"\t"
    |"\r\n"
    | "$#" : COMMENT
    |"\n"
    | "$$" : COMMENT2	
}

<COMMENT> SKIP :{
  "#$" : DEFAULT
}

<COMMENT> MORE :{
   <~[]>
}

<COMMENT2> SKIP :{
  "\n" : DEFAULT
}

<COMMENT2> MORE :{
   <~[]>
}



	
//----------- Encabezados ------------------	
TOKEN: 
{
   <tipoC :"<tipo>">
   |<idPreguntaC :"<idPregunta>">
   |< etiquetaC:"<etiqueta>">
   |< sugerirC:"<sugerir>">
   |< codigo_preC:"<codigo_pre>">
   |< codigo_postC:"<codigo_post>">
   |< restringirC:"<restringir>">
   |< restringirMsnC:"<restringirMsn>">
   |< predeterminadoC:"<predeterminado>">
   |< aplicableC:"<aplicable>">
   |< lecturaC:"<lectura>">
   |< calculoC:"<calculo>">
   |< repeticionC:"<repeticion>">
   |< multimediaC:"<multimedia>">
   |< aparienciaC:"<apariencia>">
   |< parametroC:"<parametro>">
   
   |<tipoC2 :"</tipo>">
   |<idPreguntaC2 :"</idPregunta>">
   |< etiquetaC2:"</etiqueta>">
   |< sugerirC2:"</sugerir>">
   |< codigo_preC2:"</codigo_pre>">
   |< codigo_postC2:"</codigo_post>">
   |< restringirC2:"</restringir>">
   |< restringirMsnC2:"</restringirMsn>">
   |< predeterminadoC2:"</predeterminado>">
   |< aplicableC2:"</aplicable>">
   |< lecturaC2:"</lectura>">
   |< calculoC2:"</calculo>">
   |< repeticionC2:"</repeticion>">
   |< multimediaC2:"</multimedia>">
   |< aparienciaC2:"</apariencia>">
   |< parametroC2:"</parametro>">
}


//Operadores Relacionales
TOKEN:{

<menorIgual: "<=">
|<mayorIgual: ">=">
|<menor: "<">
|<mayor:">">
|<igualIgual:"==">
|<distintoA:"!=">

}


TOKEN:    //operadores logicos
{ 
   < or: "||">
  | < and: "&&">
  | < not: "!">
}

TOKEN:{
 <menosMenos:"--">  
|<masMas:"++">  
|<suma: "+">
|<resta: "-">
|<multiplicacion: "*">
|<division: "/">
|<modulo: "mod">
|<div: "div">
|<potencia: "^">
}

TOKEN:{
  <igual:"=">
| <dosPuntos: ":">
|<abrePar: "(">
|<cierraPar: ")">
|<coma:",">
|<doblePunto: "..">
|<punto:".">
|<puntoComa:";">
|<abreLlave:"{">
|<cierraLlave:"}">
|<abreCorchete:"[">
|<cierraCorchete:"]">
|<arroba :"@">
}

TOKEN :   //EXPRESONES REGULARES 
{
     <DECIMAL: (["0"-"9"])+("."(["0"-"9"])+)>
  |  < NUM: ["0"-"9"] (["0"-"9"])* >
  |  < CADENA: "\"" (  ~["\""] )* "\"">
  |  < CARACTER: "\'" (["0"-"9"] | ["_","a"-"z","A"-"Z"] | "#" | "$" | "%" | "?" | "\u00bf" | "@")  "\'">
  |  < id: <LETRA> (<LETRA>|<DIGITO>)* >
  |  < #LETRA: ["_","a"-"z","A"-"Z"] >
  |  < #DIGITO: ["0"-"9"] >
}

SimpleNode Start():{/*@bgen(jjtree) Start */
  SimpleNode jjtn000 = new SimpleNode(JJTSTART);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}{/*@bgen(jjtree) Start */
        try {
/*@egen*/

	Inicio()/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/{return jjtn000;}/*@bgen(jjtree)*/
        } catch (Throwable jjte000) {
          if (jjtc000) {
            jjtree.clearNodeScope(jjtn000);
            jjtc000 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte000 instanceof RuntimeException) {
            throw (RuntimeException)jjte000;
          }
          if (jjte000 instanceof ParseException) {
            throw (ParseException)jjte000;
          }
          throw (Error)jjte000;
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
          }
        }
/*@egen*/

}

void Inicio():{/*@bgen(jjtree) Inicio */
  SimpleNode jjtn000 = new SimpleNode(JJTINICIO);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}{/*@bgen(jjtree) Inicio */
try {
/*@egen*/
TAG() LISTA_UNIDADES() TAG()/*@bgen(jjtree)*/
} catch (Throwable jjte000) {
  if (jjtc000) {
    jjtree.clearNodeScope(jjtn000);
    jjtc000 = false;
  } else {
    jjtree.popNode();
  }
  if (jjte000 instanceof RuntimeException) {
    throw (RuntimeException)jjte000;
  }
  if (jjte000 instanceof ParseException) {
    throw (ParseException)jjte000;
  }
  throw (Error)jjte000;
} finally {
  if (jjtc000) {
    jjtree.closeNodeScope(jjtn000, true);
  }
}
/*@egen*/
}

void TAG():{/*@bgen(jjtree) TAG */
  SimpleNode jjtn000 = new SimpleNode(JJTTAG);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}{/*@bgen(jjtree) TAG */
 try {
/*@egen*/
 ENCABEZADO_VAL()/*@bgen(jjtree)*/
 } catch (Throwable jjte000) {
   if (jjtc000) {
     jjtree.clearNodeScope(jjtn000);
     jjtc000 = false;
   } else {
     jjtree.popNode();
   }
   if (jjte000 instanceof RuntimeException) {
     throw (RuntimeException)jjte000;
   }
   if (jjte000 instanceof ParseException) {
     throw (ParseException)jjte000;
   }
   throw (Error)jjte000;
 } finally {
   if (jjtc000) {
     jjtree.closeNodeScope(jjtn000, true);
   }
 }
/*@egen*/
}



void ENCABEZAD():{/*@bgen(jjtree) ENCABEZAD */
  SimpleNode jjtn000 = new SimpleNode(JJTENCABEZAD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}{/*@bgen(jjtree) ENCABEZAD */
  try {
/*@egen*/
  ENCABEZADO_VAL()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ENCABEZADO_VAL()               :{/*@bgen(jjtree) Encabezado_Val */
                                      SimpleNode jjtn000 = new SimpleNode(JJTENCABEZADO_VAL);
                                      boolean jjtc000 = true;
                                      jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) Encabezado_Val */
    try {
/*@egen*/
    t= <tipoC>/*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn000, true);
                jjtc000 = false;
              }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<idPreguntaC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<etiquetaC>/*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn000, true);
                   jjtc000 = false;
                 }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<sugerirC>/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<codigo_preC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<codigo_postC>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<restringirC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<restringirMsnC>/*@bgen(jjtree)*/
                      {
                        jjtree.closeNodeScope(jjtn000, true);
                        jjtc000 = false;
                      }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<predeterminadoC>/*@bgen(jjtree)*/
                       {
                         jjtree.closeNodeScope(jjtn000, true);
                         jjtc000 = false;
                       }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<aplicableC>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<lecturaC>/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<calculoC>/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<repeticionC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<multimediaC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<aparienciaC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<parametroC>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/{ jjtn000.setName(t.image); }



   |t= <tipoC2>/*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn000, true);
                 jjtc000 = false;
               }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<idPreguntaC2>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<etiquetaC2>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<sugerirC2>/*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn000, true);
                   jjtc000 = false;
                 }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<codigo_preC2>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<codigo_postC2>/*@bgen(jjtree)*/
                     {
                       jjtree.closeNodeScope(jjtn000, true);
                       jjtc000 = false;
                     }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<restringirC2>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<restringirMsnC2>/*@bgen(jjtree)*/
                       {
                         jjtree.closeNodeScope(jjtn000, true);
                         jjtc000 = false;
                       }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<predeterminadoC2>/*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn000, true);
                          jjtc000 = false;
                        }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<aplicableC2>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<lecturaC2>/*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn000, true);
                   jjtc000 = false;
                 }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<calculoC2>/*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn000, true);
                   jjtc000 = false;
                 }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<repeticionC2>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<multimediaC2>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<aparienciaC2>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<parametroC2>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }/*@bgen(jjtree)*/
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void LISTA_UNIDADES() : {/*@bgen(jjtree) LISTA_UNIDADES */
  SimpleNode jjtn000 = new SimpleNode(JJTLISTA_UNIDADES);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
	{/*@bgen(jjtree) LISTA_UNIDADES */
                try {
/*@egen*/ 
		(LOOKAHEAD(2)unidad())*/*@bgen(jjtree)*/
                } catch (Throwable jjte000) {
                  if (jjtc000) {
                    jjtree.clearNodeScope(jjtn000);
                    jjtc000 = false;
                  } else {
                    jjtree.popNode();
                  }
                  if (jjte000 instanceof RuntimeException) {
                    throw (RuntimeException)jjte000;
                  }
                  if (jjte000 instanceof ParseException) {
                    throw (ParseException)jjte000;
                  }
                  throw (Error)jjte000;
                } finally {
                  if (jjtc000) {
                    jjtree.closeNodeScope(jjtn000, true);
                  }
                }
/*@egen*/
	}


void unidad():{/*@bgen(jjtree) unidad */
  SimpleNode jjtn000 = new SimpleNode(JJTUNIDAD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}{/*@bgen(jjtree) unidad */
  try {
/*@egen*/
  obtenerValorUnidad()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void obtenerValorUnidad()                    :{/*@bgen(jjtree) obtenerValorUnidad */
                                               SimpleNode jjtn000 = new SimpleNode(JJTOBTENERVALORUNIDAD);
                                               boolean jjtc000 = true;
                                               jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}{/*@bgen(jjtree) obtenerValorUnidad */
   try {
/*@egen*/

   t=<NUM>/*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn000, true);
            jjtc000 = false;
          }
/*@egen*/{ jjtn000.setName(t.image);  } 
    |t =<DECIMAL>/*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn000, true);
                   jjtc000 = false;
                 }
/*@egen*/{ jjtn000.setName(t.image); }
    |t =<CADENA>/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/{ jjtn000.setName(t.image); }
    |t =<CARACTER>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/{ jjtn000.setName(t.image); }
    |t =<dosPuntos>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
    |t =<abrePar>/*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn000, true);
                   jjtc000 = false;
                 }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<cierraPar>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<coma>/*@bgen(jjtree)*/
             {
               jjtree.closeNodeScope(jjtn000, true);
               jjtc000 = false;
             }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<doblePunto>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<punto>/*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn000, true);
                jjtc000 = false;
              }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<puntoComa>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<abreLlave>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<cierraLlave>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<abreCorchete>/*@bgen(jjtree)*/
                     {
                       jjtree.closeNodeScope(jjtn000, true);
                       jjtc000 = false;
                     }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<cierraCorchete>/*@bgen(jjtree)*/
                       {
                         jjtree.closeNodeScope(jjtn000, true);
                         jjtc000 = false;
                       }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<arroba>/*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn000, true);
                 jjtc000 = false;
               }
/*@egen*/{ jjtn000.setName(t.image); }
    |t=<menorIgual>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<mayorIgual>/*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn000, true);
                 jjtc000 = false;
               }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<menor>/*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn000, true);
            jjtc000 = false;
          }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<mayor>/*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn000, true);
            jjtc000 = false;
          }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<igualIgual>/*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn000, true);
                 jjtc000 = false;
               }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<distintoA>/*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn000, true);
                jjtc000 = false;
              }
/*@egen*/{ jjtn000.setName(t.image); }
|t=< or>/*@bgen(jjtree)*/
        {
          jjtree.closeNodeScope(jjtn000, true);
          jjtc000 = false;
        }
/*@egen*/{ jjtn000.setName(t.image); }
| t= < and>/*@bgen(jjtree)*/
           {
             jjtree.closeNodeScope(jjtn000, true);
             jjtc000 = false;
           }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<menosMenos>/*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn000, true);
                 jjtc000 = false;
               }
/*@egen*/{ jjtn000.setName(t.image); }  
|t=<masMas>/*@bgen(jjtree)*/
           {
             jjtree.closeNodeScope(jjtn000, true);
             jjtc000 = false;
           }
/*@egen*/{ jjtn000.setName(t.image); }  
|t=<suma>/*@bgen(jjtree)*/
         {
           jjtree.closeNodeScope(jjtn000, true);
           jjtc000 = false;
         }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<resta>/*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn000, true);
            jjtc000 = false;
          }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<multiplicacion>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<division>/*@bgen(jjtree)*/
             {
               jjtree.closeNodeScope(jjtn000, true);
               jjtc000 = false;
             }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<modulo>/*@bgen(jjtree)*/
           {
             jjtree.closeNodeScope(jjtn000, true);
             jjtc000 = false;
           }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<div>/*@bgen(jjtree)*/
        {
          jjtree.closeNodeScope(jjtn000, true);
          jjtc000 = false;
        }
/*@egen*/{ jjtn000.setName(t.image); }
|t=<potencia>/*@bgen(jjtree)*/
             {
               jjtree.closeNodeScope(jjtn000, true);
               jjtc000 = false;
             }
/*@egen*/{ jjtn000.setName(t.image); }
|t =<igual>/*@bgen(jjtree)*/
           {
             jjtree.closeNodeScope(jjtn000, true);
             jjtc000 = false;
           }
/*@egen*/{ jjtn000.setName(t.image); }
| t=< not>/*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn000, true);
            jjtc000 = false;
          }
/*@egen*/{ jjtn000.setName(t.image); }
|t =<id>/*@bgen(jjtree)*/
        {
          jjtree.closeNodeScope(jjtn000, true);
          jjtc000 = false;
        }
/*@egen*/{ jjtn000.setName(t.image); }/*@bgen(jjtree)*/
   } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
     }
   }
/*@egen*/
}











