/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. grammarXLSX.jj */
/*@egen*/options{
	
IGNORE_CASE = false;

STATIC=false;
}

PARSER_BEGIN(analizador)

package Analizador;
import java.io.*;

public class analizador/*@bgen(jjtree)*/implements analizadorTreeConstants/*@egen*/{/*@bgen(jjtree)*/
  protected JJTanalizadorState jjtree = new JJTanalizadorState();

/*@egen*/

}

PARSER_END(analizador)


SKIP:
{
 " "
    |"\r"
    |"\t"
    |"\r\n"
    | "$#" : COMMENT
    |"\n"
    | "$$" : COMMENT2	
}

<COMMENT> SKIP :{
  "#$" : DEFAULT
}

<COMMENT> MORE :{
   <~[]>
}

<COMMENT2> SKIP :{
  "\n" : DEFAULT
}

<COMMENT2> MORE :{
   <~[]>
}


/*--------------- SIMBOLOS -----------------*/



	
//----------- Encabezados ------------------	
TOKEN: 
{
   <tipoC :"tipo">
   |<idPreguntaC :"idPregunta">
   |< etiquetaC:"etiqueta">
   |< sugerirC:"sugerir">
   |< codigo_preC:"codigo_pre">
   |< codigo_postC:"codigo_post">
   |< restringirC:"restringir">
   |< restringirMsnC:"restringirMsn">
   |< predeterminadoC:"predeterminado">
   |< aplicableC:"aplicable">
   |< lecturaC:"lectura">
   |< calculoC:"calculo">
   |< repeticionC:"repeticion">
   |< multimediaC:"multimedia">
   |< aparienciaC:"apariencia">
   |< parametroC:"parametro">
}


//Operadores Relacionales
TOKEN:{

<menorIgual: "<=">
|<mayorIgual: ">=">
|<menor: "<">
|<mayor:">">
|<igualIgual:"==">
|<distintoA:"!=">

}


TOKEN:    //operadores logicos
{ 
   < or: "||">
  | < and: "&&">
  | < not: "!">
}

TOKEN:{
 <menosMenos:"--">  
|<masMas:"++">  
|<suma: "+">
|<resta: "-">
|<multiplicacion: "*">
|<division: "/">
|<potencia: "^">
}

TOKEN:{
<dosPuntos: ":">
|<abrePar: "(">
|<cierraPar: ")">
|<coma:",">
|<punto:".">
|<puntoComa:";">
|<abreLlave:"{">
|<cierraLlave:"}">
}

TOKEN :   //EXPRESONES REGULARES 
{
     <DECIMAL: (["0"-"9"])+("."(["0"-"9"])+)>
  |  < NUM: ["0"-"9"] (["0"-"9"])* >
  |  <CADENA: "\"" (  ~["\""] )* "\"">
  |  <CARACTER: "\'" (["0"-"9"] | ["_","a"-"z","A"-"Z"] | "#" | "$" | "%" | "?" | "\u00c2\u00bf" | "@")  "\'">
  |  < id: <LETRA> (<LETRA>|<DIGITO>)* >
  |  < UNO: "1">
  |  <CERO:"0">
  |  < #LETRA: ["_","a"-"z","A"-"Z"] >
  |  < #DIGITO: ["0"-"9"] >
}


SimpleNode Start():{/*@bgen(jjtree) Start */
  SimpleNode jjtn000 = new SimpleNode(JJTSTART);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}{/*@bgen(jjtree) Start */
        try {
/*@egen*/

	Inicio()/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/{return jjtn000;}/*@bgen(jjtree)*/
        } catch (Throwable jjte000) {
          if (jjtc000) {
            jjtree.clearNodeScope(jjtn000);
            jjtc000 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte000 instanceof RuntimeException) {
            throw (RuntimeException)jjte000;
          }
          if (jjte000 instanceof ParseException) {
            throw (ParseException)jjte000;
          }
          throw (Error)jjte000;
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
          }
        }
/*@egen*/

}

void Inicio():{/*@bgen(jjtree) Inicio */
  SimpleNode jjtn000 = new SimpleNode(JJTINICIO);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}{/*@bgen(jjtree) Inicio */
try {
/*@egen*/
TAG_ABRE()TAG_CIERRA()/*@bgen(jjtree)*/
} catch (Throwable jjte000) {
  if (jjtc000) {
    jjtree.clearNodeScope(jjtn000);
    jjtc000 = false;
  } else {
    jjtree.popNode();
  }
  if (jjte000 instanceof RuntimeException) {
    throw (RuntimeException)jjte000;
  }
  if (jjte000 instanceof ParseException) {
    throw (ParseException)jjte000;
  }
  throw (Error)jjte000;
} finally {
  if (jjtc000) {
    jjtree.closeNodeScope(jjtn000, true);
  }
}
/*@egen*/
}

void TAG_ABRE():{/*@bgen(jjtree) TAG_ABRE */
  SimpleNode jjtn000 = new SimpleNode(JJTTAG_ABRE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}{/*@bgen(jjtree) TAG_ABRE */
 try {
/*@egen*/
 <menor>ENCABEZADO()<mayor>/*@bgen(jjtree)*/
 } catch (Throwable jjte000) {
   if (jjtc000) {
     jjtree.clearNodeScope(jjtn000);
     jjtc000 = false;
   } else {
     jjtree.popNode();
   }
   if (jjte000 instanceof RuntimeException) {
     throw (RuntimeException)jjte000;
   }
   if (jjte000 instanceof ParseException) {
     throw (ParseException)jjte000;
   }
   throw (Error)jjte000;
 } finally {
   if (jjtc000) {
     jjtree.closeNodeScope(jjtn000, true);
   }
 }
/*@egen*/
}

void TAG_CIERRA():{/*@bgen(jjtree) TAG_CIERRA */
  SimpleNode jjtn000 = new SimpleNode(JJTTAG_CIERRA);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}{/*@bgen(jjtree) TAG_CIERRA */
try {
/*@egen*/
<menor><division>ENCABEZADO()<mayor>/*@bgen(jjtree)*/
} catch (Throwable jjte000) {
  if (jjtc000) {
    jjtree.clearNodeScope(jjtn000);
    jjtc000 = false;
  } else {
    jjtree.popNode();
  }
  if (jjte000 instanceof RuntimeException) {
    throw (RuntimeException)jjte000;
  }
  if (jjte000 instanceof ParseException) {
    throw (ParseException)jjte000;
  }
  throw (Error)jjte000;
} finally {
  if (jjtc000) {
    jjtree.closeNodeScope(jjtn000, true);
  }
}
/*@egen*/
}

void ENCABEZADO()           :{/*@bgen(jjtree) Encabezado */
                              SimpleNode jjtn000 = new SimpleNode(JJTENCABEZADO);
                              boolean jjtc000 = true;
                              jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) Encabezado */
    try {
/*@egen*/
    t= <tipoC >/*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn000, true);
                 jjtc000 = false;
               }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<idPreguntaC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<etiquetaC>/*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn000, true);
                   jjtc000 = false;
                 }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<sugerirC>/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<codigo_preC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<codigo_postC>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<restringirC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<restringirMsnC>/*@bgen(jjtree)*/
                      {
                        jjtree.closeNodeScope(jjtn000, true);
                        jjtc000 = false;
                      }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<predeterminadoC>/*@bgen(jjtree)*/
                       {
                         jjtree.closeNodeScope(jjtn000, true);
                         jjtc000 = false;
                       }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<aplicableC>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<lecturaC>/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<calculoC>/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<repeticionC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<multimediaC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<aparienciaC>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/{ jjtn000.setName(t.image); }
   |t=<parametroC>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/{ jjtn000.setName(t.image); }/*@bgen(jjtree)*/
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}