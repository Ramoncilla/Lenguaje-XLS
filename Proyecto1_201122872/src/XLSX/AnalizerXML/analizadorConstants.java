/* Generated By:JJTree&JavaCC: Do not edit this line. analizadorConstants.java */
package Analizador;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface analizadorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int tipoC = 12;
  /** RegularExpression Id. */
  int idPreguntaC = 13;
  /** RegularExpression Id. */
  int etiquetaC = 14;
  /** RegularExpression Id. */
  int sugerirC = 15;
  /** RegularExpression Id. */
  int codigo_preC = 16;
  /** RegularExpression Id. */
  int codigo_postC = 17;
  /** RegularExpression Id. */
  int restringirC = 18;
  /** RegularExpression Id. */
  int restringirMsnC = 19;
  /** RegularExpression Id. */
  int predeterminadoC = 20;
  /** RegularExpression Id. */
  int aplicableC = 21;
  /** RegularExpression Id. */
  int lecturaC = 22;
  /** RegularExpression Id. */
  int calculoC = 23;
  /** RegularExpression Id. */
  int repeticionC = 24;
  /** RegularExpression Id. */
  int multimediaC = 25;
  /** RegularExpression Id. */
  int aparienciaC = 26;
  /** RegularExpression Id. */
  int parametroC = 27;
  /** RegularExpression Id. */
  int menorIgual = 28;
  /** RegularExpression Id. */
  int mayorIgual = 29;
  /** RegularExpression Id. */
  int menor = 30;
  /** RegularExpression Id. */
  int mayor = 31;
  /** RegularExpression Id. */
  int igualIgual = 32;
  /** RegularExpression Id. */
  int distintoA = 33;
  /** RegularExpression Id. */
  int or = 34;
  /** RegularExpression Id. */
  int and = 35;
  /** RegularExpression Id. */
  int not = 36;
  /** RegularExpression Id. */
  int menosMenos = 37;
  /** RegularExpression Id. */
  int masMas = 38;
  /** RegularExpression Id. */
  int suma = 39;
  /** RegularExpression Id. */
  int resta = 40;
  /** RegularExpression Id. */
  int multiplicacion = 41;
  /** RegularExpression Id. */
  int division = 42;
  /** RegularExpression Id. */
  int potencia = 43;
  /** RegularExpression Id. */
  int dosPuntos = 44;
  /** RegularExpression Id. */
  int abrePar = 45;
  /** RegularExpression Id. */
  int cierraPar = 46;
  /** RegularExpression Id. */
  int coma = 47;
  /** RegularExpression Id. */
  int punto = 48;
  /** RegularExpression Id. */
  int puntoComa = 49;
  /** RegularExpression Id. */
  int abreLlave = 50;
  /** RegularExpression Id. */
  int cierraLlave = 51;
  /** RegularExpression Id. */
  int DECIMAL = 52;
  /** RegularExpression Id. */
  int NUM = 53;
  /** RegularExpression Id. */
  int CADENA = 54;
  /** RegularExpression Id. */
  int CARACTER = 55;
  /** RegularExpression Id. */
  int id = 56;
  /** RegularExpression Id. */
  int UNO = 57;
  /** RegularExpression Id. */
  int CERO = 58;
  /** RegularExpression Id. */
  int LETRA = 59;
  /** RegularExpression Id. */
  int DIGITO = 60;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMMENT = 1;
  /** Lexical state. */
  int COMMENT2 = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\r\\n\"",
    "\"$#\"",
    "\"\\n\"",
    "\"$$\"",
    "\"#$\"",
    "<token of kind 9>",
    "\"\\n\"",
    "<token of kind 11>",
    "\"tipo\"",
    "\"idPregunta\"",
    "\"etiqueta\"",
    "\"sugerir\"",
    "\"codigo_pre\"",
    "\"codigo_post\"",
    "\"restringir\"",
    "\"restringirMsn\"",
    "\"predeterminado\"",
    "\"aplicable\"",
    "\"lectura\"",
    "\"calculo\"",
    "\"repeticion\"",
    "\"multimedia\"",
    "\"apariencia\"",
    "\"parametro\"",
    "\"<=\"",
    "\">=\"",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"!\"",
    "\"--\"",
    "\"++\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\".\"",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "<DECIMAL>",
    "<NUM>",
    "<CADENA>",
    "<CARACTER>",
    "<id>",
    "\"1\"",
    "\"0\"",
    "<LETRA>",
    "<DIGITO>",
  };

}
